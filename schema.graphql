type Land @entity {
  id: ID!
  owner: Bytes!
  x: Int!
  y: Int!
  timestamp: BigInt!
  tokenURI: String!
}

type LandPurchase @entity {
  id: ID!
  contractAddress: Bytes!
  topLeftX: Int!
  topLeftY: Int!
  size: BigInt!
  buyer: Bytes!
  to: Bytes!
  price: BigInt!
  tokenAddress: Bytes!
  amountPaid: BigInt!
  timestamp: BigInt!
}

type LandReferral @entity {
  id: ID!
  contractAddress: Bytes!
  referrer: Bytes!
  referee: Bytes!
  tokenAddress: Bytes!
  amount: BigInt!
  commission: BigInt!
  commissionRate: BigInt!
}

type UserStat @entity {
  id: ID!
  numDAILandPurchases: Int!
  numETHLandPurchases: Int!
  numDAILandGiven: Int!
  numETHLandGiven: Int!
}

type SaleUserStat @entity {
  id: ID!
  numDAILandPurchases: Int!
  numETHLandPurchases: Int!
  numDAILandGiven: Int!
  numETHLandGiven: Int!
}

type LandSaleStat @entity {
  id: ID!
  numDAIPurchases: Int!
  numETHPurchases: Int!
  totalETHSpent: BigDecimal!
  totalDAISpent: BigDecimal!
  numLandsFromDAIPurchase: Int!
  numLandsFromETHPurchase: Int!
  numUniquePurchaser: Int!
  numUniqueReceiver: Int!
  numNewUniqueReceiver: Int!
  numNewUniquePurchaser: Int!
  num1x1Purchases: Int!
  num3x3Purchases: Int!
  num6x6Purchases: Int!
  num12x12Purchases: Int!
  num24x24Purchases: Int!
}

type LandSaleReferralStat @entity {
  id: ID!
  numReferrals: Int!
  totalETHSentToReferrees: BigDecimal!
  totalDAISentToReferrees: BigDecimal!
}